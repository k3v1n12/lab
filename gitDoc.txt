
Version Control System (VCS) setup and usage using git


CONFIGURE USER

git config --global user.name "username"
git config --global user.email "useremail"

HELP

git help <command name>

CREATING A REPOSITORY

Create a folder
cd into the folder and type 'git init'
Use the above local repository or create a repository on any sites such as github,bitbucket,gitlab etc

ADDING CONTENTS TO THE REPOSITORY 

git add .         -->This adds all the files to the local repository or the changed files to the local repository
git add <file>    -->To add a file to the local git repository

COMMITTING THE DATA INTO A REPOSITORY

git commit -m "Message "  --> Message should be a string indicative of the changes made

ADDING A REMOTE

git remote add origin <remote url> -->The git url obtained from the website

PUSHING CHANGES TO THE REMOTE SERVER

git push origin <branch name> --> This command uploads the changed source code to the remote server

COMPARING DIFFERENT REVISIONS

git diff --> Shows the changes from the last commit and the uncommited changes
git diff commit1 commit 2 --> Shows the difference between two commits

REVERT

git rever <commitid> --> Switches to that commit discarding the later changes
git checkout <commitid> --> Switches to a previous point in the development

CONFLICTS

In the case of conflicts, there can be many cases 
 You have uncommitted changes and you are trying to pull 
   Solution --> First commit your changes and then pull 
You are trying to push and you encounter an error
   Solution --> First pull and then push
You can't merge the current pull request
   --> This is because the same file has different status at the local and remote repositories
   Solution --> Change the conflicting file manually, then pull and later push 

 BRANCHING
 
git branch <branchname> -->Creates a new branch , branch will have content same as the master branch
git checkout <branchname> --> Switches to new branch
git -d <branchname> --> Delete a branch

MERGING

git merge <branch1> <branch2>

CLONING

git clone <url> 



 STASH

git stash --> Removes changes after the previous changes
